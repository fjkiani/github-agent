from dotenv import load_dotenv
from supabase import create_client
import os

load_dotenv()

def create_messages_table():
    try:
        supabase = create_client(
            os.getenv("SUPABASE_URL"),
            os.getenv("SUPABASE_SERVICE_KEY")
        )
        
        # SQL to create the messages table
        create_table_sql = """
        create table if not exists public.messages (
            id bigint generated by default as identity primary key,
            created_at timestamp with time zone default timezone('utc'::text, now()) not null,
            session_id text not null,
            message jsonb not null
        );

        -- Add indexes for better query performance
        create index if not exists messages_session_id_idx on public.messages(session_id);
        create index if not exists messages_created_at_idx on public.messages(created_at);
        """
        
        # Execute the SQL
        response = supabase.table("messages").select("*").execute()
        print("Table creation attempted")
        print("Response:", response)
        
        # Test the table by inserting a record
        test_insert = supabase.table("messages").insert({
            "session_id": "test_creation",
            "message": {
                "type": "test",
                "content": "Table creation test"
            }
        }).execute()
        print("\nTest insert successful!")
        print("Insert response:", test_insert)
        
    except Exception as e:
        print(f"Error creating table: {str(e)}")
        print(f"Error details: {repr(e)}")

if __name__ == "__main__":
    create_messages_table() 